"use strict";

var _interopRequireWildcard3 = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _interopRequireWildcard2 = _interopRequireDefault(require("@babel/runtime/helpers/interopRequireWildcard"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard3(require("react"));

var _codemirror = _interopRequireDefault(require("codemirror"));

require("codemirror/mode/meta");

var defaultOptions = {
  tabSize: 2,
  autoCloseBrackets: true,
  matchBrackets: true,
  showCursorWhenSelecting: true,
  // 显示行号
  lineNumbers: true,
  fullScreen: true
};

function ReactCodeMirror() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var ref = arguments.length > 1 ? arguments[1] : undefined;
  var _props$options = props.options,
      options = _props$options === void 0 ? {} : _props$options,
      _props$value = props.value,
      value = _props$value === void 0 ? '' : _props$value,
      _props$width = props.width,
      width = _props$width === void 0 ? '100%' : _props$width,
      _props$height = props.height,
      height = _props$height === void 0 ? '100%' : _props$height;

  var _useState = (0, _react.useState)(),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      editor = _useState2[0],
      setEditor = _useState2[1];

  var textareaRef = (0, _react.useRef)();
  (0, _react.useImperativeHandle)(ref, function () {
    return {
      editor: editor
    };
  }, [editor]); // 将props中所有的事件处理函数映射并保存

  function getEventHandleFromProps() {
    var propNames = Object.keys(props);
    var eventHandle = propNames.filter(function (keyName) {
      return /^on+/.test(keyName);
    });
    var eventDict = {};
    eventHandle.forEach(function (ele) {
      var name = ele.slice(2);
      eventDict[ele] = name.replace(name[0], name[0].toLowerCase());
    });
    return eventDict;
  } // http://codemirror.net/doc/manual.html#config


  function setOptions(_x) {
    return _setOptions.apply(this, arguments);
  }

  function _setOptions() {
    _setOptions = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(instance) {
      var opt,
          mode,
          _args = arguments;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              opt = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};

              if (!((0, _typeof2.default)(opt) === 'object' && window)) {
                _context.next = 8;
                break;
              }

              mode = _codemirror.default.findModeByName(opt.mode || '');

              if (!(mode && mode.mode)) {
                _context.next = 6;
                break;
              }

              _context.next = 6;
              return Promise.resolve("codemirror/mode/".concat(mode.mode, "/").concat(mode.mode, ".js")).then(function (s) {
                return (0, _interopRequireWildcard2.default)(require(s));
              });

            case 6:
              if (mode) {
                opt.mode = mode.mime;
              }

              Object.keys(opt).forEach(function (name) {
                if (opt[name] && JSON.stringify(opt[name])) {
                  instance.setOption(name, opt[name]);
                }
              });

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));
    return _setOptions.apply(this, arguments);
  }

  (0, _react.useEffect)(function () {
    if (!editor && window) {
      // 生成codemirror实例
      var instance = _codemirror.default.fromTextArea(textareaRef.current, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, defaultOptions), options));

      var eventDict = getEventHandleFromProps();
      Object.keys(eventDict).forEach(function (event) {
        instance.on(eventDict[event], props[event]);
      });
      instance.setValue(value || '');

      if (width || height) {
        // 设置尺寸
        instance.setSize(width, height);
      }

      setEditor(instance);
      setOptions(instance, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, defaultOptions), options));
    }

    return function () {
      if (editor && window) {
        editor.toTextArea();
        setEditor(undefined);
      }
    };
  }, []);
  (0, _react.useMemo)(function () {
    if (!editor || !window) return;
    var val = editor.getValue();

    if (value !== undefined && value !== val) {
      editor.setValue(value);
    }
  }, [value]);
  (0, _react.useMemo)(function () {
    if (!editor || !window) return;
    editor.setSize(width, height);
  }, [width, height]);
  (0, _react.useMemo)(function () {
    if (!editor || !window) return;
    setOptions(editor, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, defaultOptions), options));
  }, [options]);
  return /*#__PURE__*/_react.default.createElement("textarea", {
    ref: textareaRef
  });
}

var _default = /*#__PURE__*/_react.default.forwardRef(ReactCodeMirror);

exports.default = _default;
module.exports = exports.default; 
//# sourceMappingURL=index.js.map